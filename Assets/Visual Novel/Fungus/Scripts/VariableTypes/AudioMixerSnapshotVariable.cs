// This code is part of the Fungus library (https://github.com/snozbot/fungus)
// It is released for free under the MIT open source license (https://github.com/snozbot/fungus/blob/master/LICENSE)

/*This script has been, partially or completely, generated by the Fungus.GenerateVariableWindow*/
using UnityEngine;


namespace Fungus
{
    /// <summary>
    /// AudioMixerSnapshot variable type.
    /// </summary>
    [VariableInfo("Other", "AudioMixerSnapshot")]
    [AddComponentMenu("")]
	[System.Serializable]
	public class AudioMixerSnapshotVariable : VariableBase<UnityEngine.Audio.AudioMixerSnapshot>
	{ }

	/// <summary>
	/// Container for a AudioMixerSnapshot variable reference or constant value.
	/// </summary>
	[System.Serializable]
	public struct AudioMixerSnapshotData
	{
		[SerializeField]
		[VariableProperty("<Value>", typeof(AudioMixerSnapshotVariable))]
		public AudioMixerSnapshotVariable audioMixerSnapshotRef;

		[SerializeField]
		public UnityEngine.Audio.AudioMixerSnapshot audioMixerSnapshotVal;

		public static implicit operator UnityEngine.Audio.AudioMixerSnapshot(AudioMixerSnapshotData AudioMixerSnapshotData)
		{
			return AudioMixerSnapshotData.Value;
		}

		public AudioMixerSnapshotData(UnityEngine.Audio.AudioMixerSnapshot v)
		{
			audioMixerSnapshotVal = v;
			audioMixerSnapshotRef = null;
		}

		public UnityEngine.Audio.AudioMixerSnapshot Value
		{
			get { return (audioMixerSnapshotRef == null) ? audioMixerSnapshotVal : audioMixerSnapshotRef.Value; }
			set { if (audioMixerSnapshotRef == null) { audioMixerSnapshotVal = value; } else { audioMixerSnapshotRef.Value = value; } }
		}

		public string GetDescription()
		{
			if (audioMixerSnapshotRef == null)
			{
				return audioMixerSnapshotVal != null ? audioMixerSnapshotVal.ToString() : "Null";
			}
			else
			{
				return audioMixerSnapshotRef.Key;
			}
		}
	}
}